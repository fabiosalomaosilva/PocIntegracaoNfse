@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="Icons.Material.Filled.Menu"
                       Color="Color.Inherit"
                       Edge="Edge.Start"
                       OnClick="@((e) => DrawerToggle())" />

        <MudSpacer />

        <MudText Typo="Typo.h5" Class="ml-3">NFSe - Sistema de Integração</MudText>

        <MudSpacer />

        <MudIconButton Icon="@(_isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
                       Color="Color.Inherit"
                       OnClick="@ToggleDarkMode" />

        <MudMenu Icon="Icons.Material.Filled.AccountCircle" Color="Color.Inherit">
            <MudMenuItem Icon="Icons.Material.Filled.Settings">Configurações</MudMenuItem>
            <MudMenuItem Icon="Icons.Material.Filled.Help">Ajuda</MudMenuItem>
            <MudDivider />
            <MudMenuItem Icon="Icons.Material.Filled.Logout">Sair</MudMenuItem>
        </MudMenu>
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>

    <MudMainContent Class="pt-16 px-16">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = false;
    private MudThemeProvider _mudThemeProvider = null!;

    private readonly MudTheme _theme = new()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = "#0d47a1",
                Secondary = "#1976d2",
                Tertiary = "#2196f3",
                Success = "#4caf50",
                Warning = "#ff9800",
                Error = "#f44336",
                Info = "#2196f3",
                AppbarBackground = "#0d47a1",
                DrawerBackground = "#ffffff",
                Background = "#f5f5f5"
            },
            PaletteDark = new PaletteDark()
            {
                Primary = "#2196f3",
                Secondary = "#1976d2",
                Tertiary = "#0d47a1",
                Success = "#4caf50",
                Warning = "#ff9800",
                Error = "#f44336",
                Info = "#2196f3",
                AppbarBackground = "#1a1a1a",
                DrawerBackground = "#2a2a2a",
                Background = "#121212"
            },
            LayoutProperties = new LayoutProperties()
            {
                DrawerWidthLeft = "280px",
                AppbarHeight = "64px"
            }
        };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
    }
}
